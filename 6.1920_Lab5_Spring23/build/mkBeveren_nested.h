/*
 * Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
 * 
 * On Sat Apr 22 20:45:34 EDT 2023
 * 
 */

/* Generation options: */
#ifndef __mkBeveren_nested_h__
#define __mkBeveren_nested_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkBeveren_nested module */
class MOD_mkBeveren_nested : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_BRAM<tUInt8,tUInt64,tUInt8> INST_cache2_bram_memory;
  MOD_Reg<tUInt8> INST_cache2_bram_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_cache2_bram_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_cache2_bram_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_cache2_bram_serverAdapter_cnt_3;
  MOD_Reg<tUInt8> INST_cache2_bram_serverAdapter_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_cache2_bram_serverAdapter_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_cache2_bram_serverAdapter_outData_dequeueing;
  MOD_Wire<tUInt64> INST_cache2_bram_serverAdapter_outData_enqw;
  MOD_Fifo<tUInt64> INST_cache2_bram_serverAdapter_outData_ff;
  MOD_Reg<tUInt8> INST_cache2_bram_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_cache2_bram_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_cache2_bram_serverAdapter_writeWithResp;
  MOD_Reg<tUInt32> INST_cache2_cycle;
  MOD_Fifo<tUInt32> INST_cache2_hitQ;
  MOD_Reg<tUInt8> INST_cache2_lockL1;
  MOD_Fifo<tUInt64> INST_cache2_memReqQ;
  MOD_Fifo<tUInt32> INST_cache2_memRespQ;
  MOD_Reg<tUInt64> INST_cache2_missReq;
  MOD_Reg<tUInt8> INST_cache2_mshr;
  MOD_Reg<tUInt8> INST_cache2_start_fill;
  MOD_Fifo<tUInt64> INST_cache2_stb;
  MOD_Reg<tUWide> INST_cache2_working;
  MOD_Reg<tUInt64> INST_cache2_working_line;
  MOD_Reg<tUInt8> INST_cache2_working_v;
  MOD_BRAM<tUInt8,tUInt64,tUInt8> INST_cache_bram_memory;
  MOD_Reg<tUInt8> INST_cache_bram_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_cache_bram_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_cache_bram_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_cache_bram_serverAdapter_cnt_3;
  MOD_Reg<tUInt8> INST_cache_bram_serverAdapter_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_cache_bram_serverAdapter_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_cache_bram_serverAdapter_outData_dequeueing;
  MOD_Wire<tUInt64> INST_cache_bram_serverAdapter_outData_enqw;
  MOD_Fifo<tUInt64> INST_cache_bram_serverAdapter_outData_ff;
  MOD_Reg<tUInt8> INST_cache_bram_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_cache_bram_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_cache_bram_serverAdapter_writeWithResp;
  MOD_Reg<tUInt32> INST_cache_cycle;
  MOD_Fifo<tUInt32> INST_cache_hitQ;
  MOD_Reg<tUInt8> INST_cache_lockL1;
  MOD_Fifo<tUInt64> INST_cache_memReqQ;
  MOD_Fifo<tUInt32> INST_cache_memRespQ;
  MOD_Reg<tUInt64> INST_cache_missReq;
  MOD_Reg<tUInt8> INST_cache_mshr;
  MOD_Reg<tUInt8> INST_cache_start_fill;
  MOD_Fifo<tUInt64> INST_cache_stb;
  MOD_Reg<tUWide> INST_cache_working;
  MOD_Reg<tUInt64> INST_cache_working_line;
  MOD_Reg<tUInt8> INST_cache_working_v;
  MOD_Reg<tUInt32> INST_counterIn;
  MOD_Reg<tUInt32> INST_counterOut;
  MOD_Reg<tUInt32> INST_deadlockChecker;
  MOD_Reg<tUInt8> INST_doinit;
  MOD_BRAM<tUInt32,tUInt32,tUInt8> INST_mainMem_bram_memory;
  MOD_Reg<tUInt8> INST_mainMem_bram_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_mainMem_bram_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_mainMem_bram_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_mainMem_bram_serverAdapter_cnt_3;
  MOD_Reg<tUInt8> INST_mainMem_bram_serverAdapter_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_mainMem_bram_serverAdapter_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_mainMem_bram_serverAdapter_outData_dequeueing;
  MOD_Wire<tUInt32> INST_mainMem_bram_serverAdapter_outData_enqw;
  MOD_Fifo<tUInt32> INST_mainMem_bram_serverAdapter_outData_ff;
  MOD_Reg<tUInt8> INST_mainMem_bram_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_mainMem_bram_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_mainMem_bram_serverAdapter_writeWithResp;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_0_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_10_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_11_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_12_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_13_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_14_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_15_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_16_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_17_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_18_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_19_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_1_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_20_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_21_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_22_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_23_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_24_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_25_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_26_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_27_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_28_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_29_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_2_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_30_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_31_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_32_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_33_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_34_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_35_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_36_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_37_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_38_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_39_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_3_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_4_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_5_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_6_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_7_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_8_rv;
  MOD_CReg<tUInt64> INST_mainMem_dl_d_9_rv;
  MOD_BRAM<tUInt32,tUInt32,tUInt8> INST_mainRef_bram_memory;
  MOD_Reg<tUInt8> INST_mainRef_bram_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_mainRef_bram_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_mainRef_bram_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_mainRef_bram_serverAdapter_cnt_3;
  MOD_Reg<tUInt8> INST_mainRef_bram_serverAdapter_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_mainRef_bram_serverAdapter_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_mainRef_bram_serverAdapter_outData_dequeueing;
  MOD_Wire<tUInt32> INST_mainRef_bram_serverAdapter_outData_enqw;
  MOD_Fifo<tUInt32> INST_mainRef_bram_serverAdapter_outData_ff;
  MOD_Reg<tUInt8> INST_mainRef_bram_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_mainRef_bram_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_mainRef_bram_serverAdapter_writeWithResp;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_0_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_10_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_11_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_12_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_13_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_14_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_15_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_16_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_17_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_18_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_19_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_1_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_2_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_3_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_4_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_5_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_6_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_7_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_8_rv;
  MOD_CReg<tUInt64> INST_mainRef_dl_d_9_rv;
  MOD_Wire<tUInt64> INST_randomMem_ignore;
  MOD_Reg<tUInt8> INST_randomMem_initialized;
  MOD_Wire<tUInt64> INST_randomMem_zaz;
 
 /* Constructor */
 public:
  MOD_mkBeveren_nested(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_NOT_IF_cache2_bram_serverAdapter_outData_ff_i__ETC___d835;
  tUInt8 DEF_cache2_stb_first__15_BITS_57_TO_32_16_EQ_cache_ETC___d818;
  tUInt8 DEF_IF_cache2_bram_serverAdapter_outData_ff_i_notE_ETC___d828;
  tUInt8 DEF_cache2_stb_notEmpty____d811;
  tUInt8 DEF_NOT_cache2_stb_notEmpty__11___d812;
  tUInt8 DEF_cache2_stb_notEmpty__11_AND_cache2_stb_first___ETC___d819;
  tUInt8 DEF_x__h40130;
  tUInt8 DEF_NOT_IF_cache_bram_serverAdapter_outData_ff_i_n_ETC___d676;
  tUInt8 DEF_cache_stb_first__56_BITS_57_TO_32_57_EQ_cache__ETC___d659;
  tUInt8 DEF_IF_cache_bram_serverAdapter_outData_ff_i_notEm_ETC___d669;
  tUInt8 DEF_cache_stb_notEmpty____d652;
  tUInt8 DEF_NOT_cache_stb_notEmpty__52___d653;
  tUInt8 DEF_cache_stb_notEmpty__52_AND_cache_stb_first__56_ETC___d660;
  tUInt8 DEF_x__h36162;
  tUWide DEF_cache2_working___d808;
  tUWide DEF_cache_working___d649;
  tUInt64 DEF_cache2_stb_first____d815;
  tUInt64 DEF_cache_stb_first____d656;
  tUInt64 DEF_cache2_working_line___d868;
  tUInt64 DEF_cache2_bram_serverAdapter_outData_enqw_wget____d757;
  tUInt64 DEF_cache2_bram_serverAdapter_outData_ff_first____d822;
  tUInt64 DEF_cache_working_line___d709;
  tUInt64 DEF_cache_bram_serverAdapter_outData_enqw_wget____d598;
  tUInt64 DEF_cache_bram_serverAdapter_outData_ff_first____d663;
  tUInt64 DEF_mainMem_dl_d_39_rv_port0__read____d936;
  tUInt64 DEF_mainRef_dl_d_19_rv_port0__read____d965;
  tUInt32 DEF_x__h42638;
  tUInt8 DEF_b__h38384;
  tUInt8 DEF_b__h34410;
  tUInt8 DEF_b__h12793;
  tUInt8 DEF_b__h1283;
  tUInt8 DEF_x__h41200;
  tUInt8 DEF_cache2_bram_serverAdapter_s1___d783;
  tUInt8 DEF_x__h37232;
  tUInt8 DEF_cache_bram_serverAdapter_s1___d624;
  tUInt8 DEF_mainMem_bram_serverAdapter_s1___d255;
  tUInt8 DEF_mainRef_bram_serverAdapter_s1___d44;
  tUInt8 DEF_cache2_lockL1__h39763;
  tUInt8 DEF_cache2_memRespQ_notEmpty____d894;
  tUInt8 DEF_cache2_working_v__h39748;
  tUInt8 DEF_cache2_bram_serverAdapter_cnt_3_whas____d762;
  tUInt8 DEF_cache2_bram_serverAdapter_cnt_2_whas____d760;
  tUInt8 DEF_cache2_bram_serverAdapter_cnt_1_whas____d759;
  tUInt8 DEF_cache2_bram_serverAdapter_outData_ff_i_notEmpty____d754;
  tUInt8 DEF_cache_lockL1__h35793;
  tUInt8 DEF_cache_memRespQ_notEmpty____d735;
  tUInt8 DEF_cache_working_v__h35778;
  tUInt8 DEF_cache_bram_serverAdapter_cnt_3_whas____d603;
  tUInt8 DEF_cache_bram_serverAdapter_cnt_2_whas____d601;
  tUInt8 DEF_cache_bram_serverAdapter_cnt_1_whas____d600;
  tUInt8 DEF_cache_bram_serverAdapter_outData_ff_i_notEmpty____d595;
  tUInt8 DEF_mainMem_bram_serverAdapter_cnt_3_whas____d234;
  tUInt8 DEF_mainMem_bram_serverAdapter_cnt_2_whas____d232;
  tUInt8 DEF_mainMem_bram_serverAdapter_cnt_1_whas____d231;
  tUInt8 DEF_mainMem_bram_serverAdapter_outData_ff_i_notEmpty____d225;
  tUInt8 DEF_mainRef_bram_serverAdapter_cnt_3_whas____d22;
  tUInt8 DEF_mainRef_bram_serverAdapter_cnt_2_whas____d20;
  tUInt8 DEF_mainRef_bram_serverAdapter_cnt_1_whas____d19;
  tUInt8 DEF_mainRef_bram_serverAdapter_outData_ff_i_notEmpty____d13;
  tUInt32 DEF__read_memReq_addr__h40087;
  tUInt32 DEF__read_memReq_addr__h36117;
  tUInt32 DEF_y__h40126;
  tUInt32 DEF_y__h36158;
  tUInt32 DEF_x__h40402;
  tUInt32 DEF_x__h36434;
  tUInt32 DEF__read_tag__h40433;
  tUInt32 DEF_x_wget_tag__h37916;
  tUInt32 DEF_x_first_tag__h39962;
  tUInt32 DEF__read_tag__h36465;
  tUInt32 DEF_x_first_tag__h35992;
  tUInt32 DEF_x_wget_tag__h33942;
  tUInt8 DEF_x__h40710;
  tUInt8 DEF_x_wget_valid__h37915;
  tUInt8 DEF_x_first_valid__h39961;
  tUInt8 DEF_x__h36742;
  tUInt8 DEF_x_first_valid__h35991;
  tUInt8 DEF_x_wget_valid__h33941;
  tUInt8 DEF__read_memReq_write__h40086;
  tUInt8 DEF__read_memReq_write__h36116;
  tUInt8 DEF_cache2_bram_serverAdapter_s1_83_BIT_0___d784;
  tUInt8 DEF_cache_bram_serverAdapter_s1_24_BIT_0___d625;
  tUInt8 DEF_mainMem_bram_serverAdapter_s1_55_BIT_0___d256;
  tUInt8 DEF_mainRef_bram_serverAdapter_s1_4_BIT_0___d45;
  tUInt32 DEF_x__h40125;
  tUInt32 DEF_x__h36157;
  tUInt8 DEF_cache2_stb_first__15_BITS_57_TO_43_67_EQ_cache_ETC___d870;
  tUInt8 DEF_cache_stb_first__56_BITS_57_TO_43_08_EQ_cache__ETC___d711;
  tUInt8 DEF_cache2_working_line_68_BITS_48_TO_47_80_EQ_2___d881;
  tUInt8 DEF_IF_cache2_bram_serverAdapter_outData_ff_i_notE_ETC___d834;
  tUInt8 DEF_cache_working_line_09_BITS_48_TO_47_21_EQ_2___d722;
  tUInt8 DEF_IF_cache_bram_serverAdapter_outData_ff_i_notEm_ETC___d675;
  tUInt8 DEF_NOT_cache2_stb_first__15_BITS_57_TO_43_67_EQ_c_ETC___d871;
  tUInt8 DEF_NOT_cache_stb_first__56_BITS_57_TO_43_08_EQ_ca_ETC___d712;
  tUInt8 DEF_NOT_cache_working_v_42___d643;
  tUInt8 DEF_NOT_cache2_working_v_01___d802;
  tUInt8 DEF_NOT_cache2_working_08_BIT_62_09___d848;
  tUInt8 DEF_NOT_cache2_lockL1_04___d805;
  tUInt8 DEF_NOT_cache_working_49_BIT_62_50___d689;
  tUInt8 DEF_NOT_cache_lockL1_45___d646;
 
 /* Local definitions */
 private:
  tUInt32 DEF_v__h319;
  tUInt32 DEF_v__h282;
  tUInt64 DEF_x_wget__h217;
  tUInt32 DEF_x_wget__h12300;
  tUInt32 DEF_x_wget__h790;
  tUInt64 DEF_cache2_working_08_BITS_62_TO_4___d866;
  tUInt64 DEF_cache_working_49_BITS_62_TO_4___d707;
  tUInt32 DEF__read_memReq_data__h40088;
  tUInt32 DEF__read_memReq_data__h36118;
  tUInt64 DEF_v__h394;
  tUInt32 DEF_x__h40165;
  tUInt32 DEF_x__h36197;
  tUInt8 DEF__read_idx__h40080;
  tUInt8 DEF__read_idx__h36110;
  tUInt32 DEF_x__h12398;
  tUInt32 DEF_x__h888;
  tUInt8 DEF__0_CONCAT_DONTCARE___d35;
  tUWide DEF_cache_memReqQ_first__14_BITS_57_TO_36_19_CONCA_ETC___d920;
  tUWide DEF__0_CONCAT_IF_randomMem_zaz_whas_THEN_randomMem__ETC___d964;
  tUInt64 DEF__0_CONCAT_DONTCARE___d66;
 
 /* Rules */
 public:
  void RL_randomMem_every();
  void RL_randomMem_every_1();
  void RL_mainRef_bram_serverAdapter_outData_enqueue();
  void RL_mainRef_bram_serverAdapter_outData_dequeue();
  void RL_mainRef_bram_serverAdapter_cnt_finalAdd();
  void RL_mainRef_bram_serverAdapter_s1__dreg_update();
  void RL_mainRef_bram_serverAdapter_stageReadResponseAlways();
  void RL_mainRef_bram_serverAdapter_moveToOutFIFO();
  void RL_mainRef_bram_serverAdapter_overRun();
  void RL_mainRef_dl_try_move();
  void RL_mainRef_dl_try_move_1();
  void RL_mainRef_dl_try_move_2();
  void RL_mainRef_dl_try_move_3();
  void RL_mainRef_dl_try_move_4();
  void RL_mainRef_dl_try_move_5();
  void RL_mainRef_dl_try_move_6();
  void RL_mainRef_dl_try_move_7();
  void RL_mainRef_dl_try_move_8();
  void RL_mainRef_dl_try_move_9();
  void RL_mainRef_dl_try_move_10();
  void RL_mainRef_dl_try_move_11();
  void RL_mainRef_dl_try_move_12();
  void RL_mainRef_dl_try_move_13();
  void RL_mainRef_dl_try_move_14();
  void RL_mainRef_dl_try_move_15();
  void RL_mainRef_dl_try_move_16();
  void RL_mainRef_dl_try_move_17();
  void RL_mainRef_dl_try_move_18();
  void RL_mainRef_deq();
  void RL_mainMem_bram_serverAdapter_outData_enqueue();
  void RL_mainMem_bram_serverAdapter_outData_dequeue();
  void RL_mainMem_bram_serverAdapter_cnt_finalAdd();
  void RL_mainMem_bram_serverAdapter_s1__dreg_update();
  void RL_mainMem_bram_serverAdapter_stageReadResponseAlways();
  void RL_mainMem_bram_serverAdapter_moveToOutFIFO();
  void RL_mainMem_bram_serverAdapter_overRun();
  void RL_mainMem_dl_try_move();
  void RL_mainMem_dl_try_move_1();
  void RL_mainMem_dl_try_move_2();
  void RL_mainMem_dl_try_move_3();
  void RL_mainMem_dl_try_move_4();
  void RL_mainMem_dl_try_move_5();
  void RL_mainMem_dl_try_move_6();
  void RL_mainMem_dl_try_move_7();
  void RL_mainMem_dl_try_move_8();
  void RL_mainMem_dl_try_move_9();
  void RL_mainMem_dl_try_move_10();
  void RL_mainMem_dl_try_move_11();
  void RL_mainMem_dl_try_move_12();
  void RL_mainMem_dl_try_move_13();
  void RL_mainMem_dl_try_move_14();
  void RL_mainMem_dl_try_move_15();
  void RL_mainMem_dl_try_move_16();
  void RL_mainMem_dl_try_move_17();
  void RL_mainMem_dl_try_move_18();
  void RL_mainMem_dl_try_move_19();
  void RL_mainMem_dl_try_move_20();
  void RL_mainMem_dl_try_move_21();
  void RL_mainMem_dl_try_move_22();
  void RL_mainMem_dl_try_move_23();
  void RL_mainMem_dl_try_move_24();
  void RL_mainMem_dl_try_move_25();
  void RL_mainMem_dl_try_move_26();
  void RL_mainMem_dl_try_move_27();
  void RL_mainMem_dl_try_move_28();
  void RL_mainMem_dl_try_move_29();
  void RL_mainMem_dl_try_move_30();
  void RL_mainMem_dl_try_move_31();
  void RL_mainMem_dl_try_move_32();
  void RL_mainMem_dl_try_move_33();
  void RL_mainMem_dl_try_move_34();
  void RL_mainMem_dl_try_move_35();
  void RL_mainMem_dl_try_move_36();
  void RL_mainMem_dl_try_move_37();
  void RL_mainMem_dl_try_move_38();
  void RL_mainMem_deq();
  void RL_cache_bram_serverAdapter_outData_enqueue();
  void RL_cache_bram_serverAdapter_outData_dequeue();
  void RL_cache_bram_serverAdapter_cnt_finalAdd();
  void RL_cache_bram_serverAdapter_s1__dreg_update();
  void RL_cache_bram_serverAdapter_stageReadResponseAlways();
  void RL_cache_bram_serverAdapter_moveToOutFIFO();
  void RL_cache_bram_serverAdapter_overRun();
  void RL_cache_count();
  void RL_cache_req_process();
  void RL_cache_mvStbToL1();
  void RL_cache_startMiss();
  void RL_cache_sendFillReq();
  void RL_cache_waitFillResp_Ld();
  void RL_cache_waitFillResp_St();
  void RL_cache2_bram_serverAdapter_outData_enqueue();
  void RL_cache2_bram_serverAdapter_outData_dequeue();
  void RL_cache2_bram_serverAdapter_cnt_finalAdd();
  void RL_cache2_bram_serverAdapter_s1__dreg_update();
  void RL_cache2_bram_serverAdapter_stageReadResponseAlways();
  void RL_cache2_bram_serverAdapter_moveToOutFIFO();
  void RL_cache2_bram_serverAdapter_overRun();
  void RL_cache2_count();
  void RL_cache2_req_process();
  void RL_cache2_mvStbToL1();
  void RL_cache2_startMiss();
  void RL_cache2_sendFillReq();
  void RL_cache2_waitFillResp_Ld();
  void RL_cache2_waitFillResp_St();
  void RL_connectCacheL1L2();
  void RL_connectL2L1Cache();
  void RL_connectCacheDram();
  void RL_connectDramCache();
  void RL_start();
  void RL_reqs();
  void RL_resps();
  void RL_deadlockerC();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBeveren_nested &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkBeveren_nested &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkBeveren_nested &backing);
};

#endif /* ifndef __mkBeveren_nested_h__ */
